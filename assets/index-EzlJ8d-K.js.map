{"version":3,"file":"index-EzlJ8d-K.js","sources":["../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/lib/esm/index.js","../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/webtransport.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/url.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../src/mywebaudio.js","../../src/main.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","/*\n * Copyright 2016 Boris Smus. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Adapted from Boris Smus's demo at http://webaudioapi.com/samples/visualizer\n\n/* globals AudioContext, webkitAudioContext */\n\n//const WIDTH = 300;\n//const HEIGHT = 100;\n\n// Interesting parameters to tweak!\nconst SMOOTHING = 0.8;\nconst FFT_SIZE = 64;\n\nexport default function MyWebAudio(source, analyser, canvas) {\n  //console.log('Creating StreamVisualizer with remoteStream and canvas: ', remoteStream, canvas);\n  this.canvas = canvas;\n  this.source = source;\n  this.drawContext = canvas.getContext('2d');\n\n  this.analyser = analyser;\n  this.freqs = new Uint8Array(this.analyser.frequencyBinCount);\n  this.times = new Uint8Array(this.analyser.frequencyBinCount);\n  this.analyser.smoothingTimeConstant = SMOOTHING;\n  this.analyser.fftSize = FFT_SIZE;\n  this.startTime = 0;\n  this.startOffset = 0;\n}\n\nMyWebAudio.prototype.start = function() {\n  this.myAnim = requestAnimationFrame(this.draw.bind(this));\n};\n\nMyWebAudio.prototype.stop = function() {\n  cancelAnimationFrame(this.myAnim);\n};\n\nMyWebAudio.prototype.draw = function() {\n  let barWidth;\n  let offset;\n  let height;\n  let percent;\n  let value;\n\n  // Get the frequency data from the currently playing music\n  this.analyser.getByteFrequencyData(this.freqs);\n  this.analyser.getByteTimeDomainData(this.times);\n\n\n  //this.canvas.width = WIDTH;\n  //this.canvas.height = HEIGHT;\n  this.drawContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  // Draw the frequency domain chart.\n  for (let i = 0; i < this.analyser.frequencyBinCount; i++) {\n    value = this.freqs[i];\n    percent = value / 256;\n    height = this.canvas.height * percent;\n    offset = this.canvas.height - height - 1;\n    barWidth = this.canvas.width / this.analyser.frequencyBinCount;\n    let hue = i/this.analyser.frequencyBinCount * 360;\n    this.drawContext.fillStyle = 'hsl(' + hue + ', 100%, 50%)';\n    this.drawContext.fillRect(i * barWidth, offset, barWidth, height);\n  }\n\n  // Draw the time domain chart.\n  for (let i = 0; i < this.analyser.frequencyBinCount; i++) {\n    value = this.times[i];\n    percent = value / 256;\n    height = this.canvas.height * percent;\n    offset = this.canvas.height - height - 1;\n    barWidth = this.canvas.width/this.analyser.frequencyBinCount;\n    this.drawContext.fillStyle = 'black';\n    this.drawContext.fillRect(i * barWidth, offset, 10, 2);\n  }\n\n  requestAnimationFrame(this.draw.bind(this));\n};\n\nMyWebAudio.prototype.getFrequencyValue = function(freq) {\n  let nyquist = this.context.sampleRate/2;\n  let index = Math.round(freq/nyquist * this.freqs.length);\n  return this.freqs[index];\n};\n","import './style.css';\nimport { io } from 'socket.io-client';\nimport MyWebAudio from './mywebaudio.js'\nconst   socket = io.connect(\"https://mywebrtcserver-thrumming-resonance-5604.fly.dev/\");\n\n// const socket = io.connect(\"https://192.168.10.2:1337\");\nconsole.log(\"Flyio ok\");\n//const socket = io.connect(\"https://192.168.10.2:1337\");\nconst adminVideos = document.getElementById(\"adminVideos\");\n\nfor (let i = 0; i < 20; i++){\n  let videoelement = document.createElement(\"video\");\n  videoelement.src = './videos/video1.mp4';\n  videoelement.type=\"video/mp4\";\n  videoelement.width = 250;\n  videoelement.playsinline = true;\n  videoelement.loop = true;\n  videoelement.controls = true;\n  videoelement.volume = 1;\n  adminVideos.appendChild(videoelement);\n}\ndocument.getElementById('btn_start').onclick = startContext;\ndocument.getElementById('btn_reload').onclick = sendData;\ndocument.getElementById('btn_stopAll').onclick = removeAllStoped;\n// const btn_midi = document.getElementById('btn_midi');\n// const slider_midi = document.getElementById('slider_midi');\ndocument.getElementById('btn_scene1').onclick = changeScene;\ndocument.getElementById('btn_scene20').onclick = changeScene;\ndocument.getElementById('btn_scene21').onclick = changeScene;\n// document.getElementById('btn_scene21_random').onclick = sendData;\ndocument.getElementById('btn_scene3').onclick = changeScene;\ndocument.getElementById('btn_scene6').onclick = changeScene;\ndocument.getElementById('btn_sceneTHEEND').onclick = changeScene;\ndocument.getElementById('btn_tech').onclick = changeScene;\ndocument.getElementById('btn_lauch').onclick = sendData;\ndocument.getElementById(\"btn_showG\").onclick = (e) => {\n  if (e.target.style.background == 'white'){\n    e.target.style.background = 'orange';\n    Array.from(document.getElementsByClassName('global')).forEach(g=>g.style.display = 'flex');\n  } else {\n    e.target.style.background = 'white';\n    Array.from(document.getElementsByClassName('global')).forEach(g=>g.style.display = 'none');\n  }\n}\nconst scenes = document.getElementById('scenes');\nconst spatDiv = document.getElementById('spatDiv');\nconst scenes_array = Array.from(scenes.children);\nconst resizeTel = document.getElementById('resizeTel');\nresizeTel.addEventListener(\"input\", () => {\n  Array.from(document.getElementsByClassName('tel')).forEach(t=>t.style.width = `${resizeTel.value}%`);\n});\n\nconst divGStats = document.getElementById('stats');\n\nlet clientS = [];\nlet sendChannel;\nlet receiveChannel;\nlet currentSceneNb = 1;\nlet currentSel = 0;\nlet iterKey = 0;\ndocument.addEventListener('keydown', changeBackgroundColor);\nconst NVideo = 21;\nconst roomName = \"!?ATtablee007!?\";\nlet currentClientId;\nlet stopco = false;\ndocument.getElementById(\"btn_stopco\").onclick = ()=>{\n  if (stopco){\n    document.getElementById(\"btn_stopco\").style.background = 'white';\n    stopco = false;\n  } else {\n    document.getElementById(\"btn_stopco\").style.background = 'red';\n    stopco = true;\n  }\n}\nlet stopco2 = false;\ndocument.getElementById(\"btn_stopco2\").onclick = ()=>{\n  if (stopco2){\n    document.getElementById(\"btn_stopco2\").style.background = 'white';\n    document.getElementById(\"btn_stopco2\").innerText = 'Disco';\n    stopco2 = false;\n    socket.connect();\n  } else {\n    document.getElementById(\"btn_stopco2\").style.background = 'green';\n    document.getElementById(\"btn_stopco2\").innerText = 'Reco';\n    stopco2 = true;\n    socket.disconnect();\n  }\n}\n\nlet iceServers = {\n  iceServers: [\n    { urls: \"stun:stun.services.mozilla.com\" },\n    { urls: \"stun:stun.l.google.com:19302\" },\n  ],\n};\n\ndocument.getElementById(\"S1_param1\").addEventListener(\"input\", (event) => {\n  const data = {\"scene\": 1, \"freq\": event.target.value};\n  for (let i = 0; i < clientS.length; i++){\n    if (clientS[i].rtcDataSendChannel.readyState === 'open') {\n      clientS[i].rtcDataSendChannel.send(JSON.stringify(data));\n    }\n  }\n});\n\n//{ sinkId: \"124e612f375942fd133185c04186d1a26bc79eda5e4fc75317b508430d00e4ea\" }\n//dd857c29f4637fcbf86c57824bb2a1a64bf64a1df8e63d004230d6cb31ccc748\nlet ctx;\nlet merger;\nlet bitcrusher;\nlet ch = 0;\nlet source;\nlet gainNode;\nlet analyser;\n// let spatGains= [];\nlet cutFreq;\n// let spatDiv_client;\n// const NN = 300;\n\n// 4SPAT :\n// function mousemove(e) {\n//   gsap.to('.spatDiv_client_selected',\n//     { x: e.clientX-spatDiv.getBoundingClientRect().left-10,\n//       y: e.clientY-spatDiv.getBoundingClientRect().top-10, //\"+=250\" -> NOTE for relative\n//       duration: 2,\n//       ease: \"power3.inout\",\n//       onStart: function () {\n//         gsap.ticker.fps(60);\n//       },\n//       onUpdate: function(){\n//         const clientId = this.targets()[0].getAttribute(\"id\").substring(7);\n//         for (let i=0; i<ctx.destination.maxChannelCount; i++){\n//           let value = 1/(1+Math.sqrt(Math.pow((gsap.getProperty(this.targets()[0], \"x\")-NN*i)*0.1,2)));\n//           clientS.find(c=>c.clientId==clientId).spatGains[i].gain.value = value;\n//         }\n//       },\n//       // repeat: -1,\n//     });\n// }\n// function mouseup(e) {\n//   document.getElementsByClassName('spatDiv_client_selected')[0].classList.remove('spatDiv_client_selected');\n//   spatDiv.removeEventListener(\"mousemove\", mousemove);\n//   spatDiv.removeEventListener(\"mouseup\", mouseup);\n// }\n\nfunction startContext(event) {\n  //console.log(navigator.mediaDevices.enumerateDevices());\n  ctx = new AudioContext();\n  ctx.destination.channelInterpretation = 'discrete';\n  ctx.destination.channelCount = ctx.destination.maxChannelCount;\n  merger = ctx.createChannelMerger(ctx.destination.maxChannelCount);\n  merger.channelInterpretation = 'discrete';\n  merger.connect(ctx.destination);\n  console.log(\"Channel number: \" + ctx.destination.maxChannelCount);\n  console.log(ctx);\n  document.body.style.background = 'white';\n  // 4SPAT :\n  // for (let i=0; i<ctx.destination.maxChannelCount; i++){\n  //   let speaker = document.createElement('div');\n  //   speaker.style.left = (i*NN)+'px';\n  //   // spatDiv_client.setAttribute(\"id\", 'spatDiv'+ currentClientId);\n  //   speaker.classList.add('spatDiv_speakers');\n  //   spatDiv.appendChild(speaker);\n  // }\n}\n\n// Display statistics\nsetInterval(() => {\n\n  try{\n    if (clientS.length > 0) {\n      let rbitrate = 0;\n      let sbitrate = 0;\n      for (let i = 0; i < clientS.length; i++){\n        let clientId = clientS[i].clientId;\n        let divStats = document.getElementsByName('divStats' + clientId)[0];\n        let statsPrev = {\n          t: divStats.getAttribute('data-t'),\n          raB: divStats.getAttribute('data-raB'),\n          rvB: divStats.getAttribute('data-rvB'),\n          saB: divStats.getAttribute('data-saB'),\n          svB: divStats.getAttribute('data-svB')\n        }\n        clientS[i].rtcPeerConnection\n            .getStats(null)\n            .then((results)=>{\n              let stats = dumpStats(results, statsPrev);\n              rbitrate += stats.rabitrate + stats.rvbitrate;\n              sbitrate += stats.sabitrate + stats.svbitrate;\n              divStats.innerHTML = 'RA = ' + stats.rabitrate + ' kbits/sec  //  ';\n              divStats.innerHTML += 'RV = ' + stats.rvbitrate + ' kbits/sec<br>';\n              divStats.innerHTML += 'SA = ' + stats.sabitrate + ' kbits/sec  //  ';\n              divStats.innerHTML += 'SV = ' + stats.svbitrate + ' kbits/sec<br>';\n              //divStats.innerHTML += stats.all;\n              divStats.setAttribute('data-t', stats.t);\n              divStats.setAttribute('data-raB', stats.raB);\n              divStats.setAttribute('data-rvB', stats.rvB);\n              divStats.setAttribute('data-saB', stats.saB);\n              divStats.setAttribute('data-svB', stats.svB);\n              divGStats.innerHTML = 'R = ' + rbitrate + ' kbits/sec  //  ';\n              divGStats.innerHTML += 'S = ' + sbitrate + ' kbits/sec';\n            });\n      }\n    }\n  } catch(err){\n    console.log(err);\n  }\n}, 5000);\n\nfunction dumpStats(results, statsPrev) {\n  let bytes = 0;\n  let stats = {\n    t: Date.now(),\n    rabitrate: 0,\n    rvbitrate: 0,\n    sabitrate: 0,\n    svbitrate: 0,\n    raB: 0,\n    rvB: 0,\n    saB: 0,\n    svB: 0,\n    all: ''\n  }\n  results.forEach(res => {\n    if (res.type === 'inbound-rtp' && res.mediaType === 'audio') {\n      stats.raB = res.bytesReceived;\n      stats.rabitrate = Math.floor(8 * (stats.raB - statsPrev.raB) / (stats.t - statsPrev.t));\n    } else if (res.type === 'inbound-rtp' && res.mediaType === 'video') {\n      stats.rvB = res.bytesReceived;\n      stats.rvbitrate = Math.floor(8 * (stats.rvB - statsPrev.rvB) / (stats.t - statsPrev.t));\n    } else if (res.type === 'outbound-rtp' && res.mediaType === 'audio') {\n      stats.saB = res.bytesSent;\n      stats.sabitrate = Math.floor(8 * (stats.saB - statsPrev.saB) / (stats.t - statsPrev.t));\n    } else if (res.type === 'outbound-rtp' && res.mediaType === 'video') {\n      stats.svB = res.bytesSent;\n      stats.svbitrate = Math.floor(8 * (stats.svB - statsPrev.svB) / (stats.t - statsPrev.t));\n    }\n    \n    stats.all += '<h3>Report type=';\n    stats.all += res.type;\n    stats.all += '</h3>\\n';\n    stats.all += `id ${res.id}<br>`;\n    stats.all += `time ${res.timestamp}<br>`;\n    Object.keys(res).forEach(k => {\n      if (k !== 'timestamp' && k !== 'type' && k !== 'id') {\n        if (typeof res[k] === 'object') {\n          stats.all += `${k}: ${JSON.stringify(res[k])}<br>`;\n        } else {\n          stats.all += `${k}: ${res[k]}<br>`;\n        }\n      }\n    });\n  });\n\n  return stats;\n}\n\nsocket.on(\"create\", function () {\n});\n\nsocket.on(\"offer\", function (offer, clientId) {\n  if (clientS && (clientS.find(t=>t.clientId==clientId))) removeClient(clientId);\n  console.log('Offer receive from = '+clientId);\n  let videoelement = document.getElementById(\"adminVideos\");\n  videoelement = videoelement.getElementsByTagName(\"video\")[0];\n  let adminStream = videoelement.captureStream();\n  const audioTracks = adminStream.getAudioTracks();\n  const videoTracks = adminStream.getVideoTracks();\n  if (videoTracks.length > 0) {\n    console.log(`Using video device: ${videoTracks[0].label}`);\n  }\n  if (audioTracks.length > 0) {\n    console.log(`Using audio device: ${audioTracks[0].label}`);\n  }\n  videoTracks.forEach(track => {\n    if ('contentHint' in track) {\n      track.contentHint = 'detail';\n      if (track.contentHint !== 'detail') {\n        console.log('Invalid video track contentHint: \\'' + 'detail' + '\\'');\n      }\n    } else {\n      console.log('MediaStreamTrack contentHint attribute not supported');\n    }\n  });\n\n  let rtcPeerConnection = new RTCPeerConnection(iceServers);\n  rtcPeerConnection.onicecandidate = OnIceCandidateFunction;\n  rtcPeerConnection.setRemoteDescription(offer);\n  adminStream.getTracks().forEach((track) => rtcPeerConnection.addTrack(track, adminStream));\n  rtcPeerConnection.ondatachannel = receiveChannelCallback;\n\n  if (stopco){\n    rtcPeerConnection.close();\n    rtcPeerConnection = null;\n    socket.emit(\"answer\", \"stopco\", clientId);\n    console.log('No answer sent to : ' + clientId);\n  } else if (ctx) {\n    currentClientId = clientId;\n    rtcPeerConnection.ontrack = OnTrackFunction;\n    rtcPeerConnection\n    .createAnswer()\n    .then((answer) => {\n        rtcPeerConnection.setLocalDescription(answer);\n        socket.emit(\"answer\", answer, clientId);\n        console.log('answer sent to : ' + clientId);\n        sendChannel = rtcPeerConnection.createDataChannel('mySceneName');\n        sendChannel.onopen = onSendChannelStateChange;\n        sendChannel.onmessage = onSendChannelMessageCallback;\n        sendChannel.onclose = onSendChannelStateChange;\n        rtcPeerConnection.onconnectionstatechange = (ev) => {\n          switch(ev.currentTarget.connectionState) {\n            case \"new\":\n              console.log(\"New...\");\n              break;\n            case \"checking\":\n              console.log(\"Connecting…\");\n              break;\n            case \"connected\":\n              console.log(\"Online\");\n              clientS.find(t=>t.rtcPeerCoID.includes(ev.currentTarget.remoteDescription.sdp.slice(9, 29))).div.style.borderColor = \"green\";\n              break;\n            case \"disconnected\":\n              console.log(\"Disconnecting…\");\n              ev.currentTarget.close();\n              clientS.find(t=>t.rtcPeerCoID.includes(ev.currentTarget.remoteDescription.sdp.slice(9, 29))).div.style.borderColor = \"red\";\n              //removeClient(clientId);\n              break;\n            case \"closed\":\n              console.log(\"Offline\");\n              ev.currentTarget.close();\n              clientS.find(t=>t.rtcPeerCoID.includes(ev.currentTarget.remoteDescription.sdp.slice(9, 29))).div.style.borderColor = \"red\";\n              break;\n            case \"failed\":\n              console.log(\"Error\");\n              ev.currentTarget.close();\n              clientS.find(t=>t.rtcPeerCoID.includes(ev.currentTarget.remoteDescription.sdp.slice(9, 29))).div.style.borderColor = \"red\";\n              break;\n            default:\n              console.log(\"Unknown\");\n              break;\n          }\n        };\n        let myPeer = ctx.createMediaStreamDestination();\n        let client = {\n          rtcDataSendChannel: sendChannel,\n          rtcPeerConnection: rtcPeerConnection,\n          clientId : clientId,\n          rtcPeerCoID: rtcPeerConnection.remoteDescription.sdp.slice(9, 29),\n          div: document.getElementsByName('div'+clientId)[0],\n          source: source,\n          gainNode: gainNode,\n          cutFreq: cutFreq,\n          analyser: analyser,\n          audioCrac_myPeer: myPeer,\n          // spatGains: spatGains, // 4SPAT :\n        };\n        clientS.push(client);\n    })\n    .catch((error) => {\n        console.log(error);\n    });\n  } else {\n    rtcPeerConnection.close();\n    rtcPeerConnection = null;\n    socket.emit(\"answer\", null, clientId);\n    console.log('No answer sent to : ' + clientId);\n  }\n});\n\nsocket.on(\"disconnect\", (reason) => {\n  console.log(reason);\n  if (reason === \"io server disconnect\") {\n    // the disconnection was initiated by the server, you need to reconnect manually\n    socket.connect();\n  }\n  // else the socket will automatically try to reconnect\n});\n\nsocket.on(\"connect\", () => {\n  socket.emit(\"join\", roomName, 'ClintIsDead007!?');\n});\n\n// Implementing the OnIceCandidateFunction which is part of the RTCPeerConnection Interface.\nfunction OnIceCandidateFunction(event) {\n    console.log(\"Candidate\");\n    if (event.candidate) {\n      socket.emit(\"candidate\", event.candidate, roomName, currentClientId);\n    }\n  }\n  \n// Implementing the OnTrackFunction which is part of the RTCPeerConnection Interface.\nfunction OnTrackFunction(event) {\n  console.log(\"OnTrack\");\n  if (event.track.kind === 'audio'){\n    const medias = document.getElementById('medias');\n    const clientdiv = document.createElement(\"div\");\n    medias.appendChild(clientdiv);\n    clientdiv.setAttribute(\"name\", 'div' + currentClientId);\n    clientdiv.classList.add(\"tel\");\n    clientdiv.style.width = `${document.getElementById('resizeTel').value}%`;\n    let divS = document.createElement(\"div\");\n    divS.setAttribute(\"name\", 'divS1');\n    divS.classList.add(\"divS\");\n    clientdiv.appendChild(divS);\n    const audio = document.createElement(\"audio\");\n    audio.setAttribute(\"name\", 'audio' + currentClientId); // TODO ? Why audio needed ??\n    audio.controls = false;\n    audio.autoplay = true;\n    audio.muted = true;\n    divS.appendChild(audio);\n    \n    if (audio.srcObject !== event.streams[0]) {\n      audio.srcObject = event.streams[0];\n      console.log('Received audio remote stream');\n    }\n    const gain = document.createElement('input');\n    gain.setAttribute(\"name\", 'input'+currentClientId);\n    gain.type = 'range';\n    gain.min = 0;\n    gain.max = 1;\n    gain.value = 1.0;\n    gain.step = 0.1;\n    gain.addEventListener(\"input\", changeGain);\n    divS.appendChild(gain);\n    let canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"name\", 'canvas' + currentClientId);\n    canvas.width = 250;\n    divS.appendChild(canvas);\n    if (ctx){\n      // spatGains = [];// 4SPAT :\n      source = ctx.createMediaStreamSource(event.streams[0]);\n      gainNode = ctx.createGain();\n      gainNode.gain.value = gain.value;\n      analyser = ctx.createAnalyser();\n      analyser.minDecibels = -140;\n      analyser.maxDecibels = 0;\n\n      const cutFreq_f = document.createElement('input');\n      cutFreq_f.setAttribute(\"name\", 'input'+currentClientId);\n      cutFreq_f.type = 'range';\n      cutFreq_f.min = 0;\n      cutFreq_f.max = 22050;\n      cutFreq_f.value = 0;\n      cutFreq_f.step = 100;\n      \n      cutFreq_f.addEventListener(\"input\", changeCutFreq)\n      divS.appendChild(cutFreq_f);\n\n      cutFreq = ctx.createBiquadFilter();\n      cutFreq.frequency.value = cutFreq_f.value;\n      cutFreq.type = \"peaking\";\n      cutFreq.gain.value = -40;\n      const splitter = ctx.createChannelSplitter(1);\n      source.connect(splitter).connect(cutFreq).connect(gainNode).connect(analyser).connect(merger, 0, ch);\n\n      // 4SPAT :\n      // source.connect(splitter).connect(cutFreq).connect(gainNode).connect(analyser);\n      // for (let i = 0; i < ctx.destination.maxChannelCount;i++){\n      //   const gain = ctx.createGain();\n      //   if (i == ch){\n      //     gain.gain.value = 1;\n      //   } else {\n      //     gain.gain.value = 0;\n      //   }\n      //   spatGains.push(gain);\n      //   analyser.connect(gain).connect(merger, 0, i);\n      // }\n\n      const btn_chan = document.createElement(\"div\");\n      divS.appendChild(btn_chan);\n      for (let i=0; i<ctx.destination.maxChannelCount; i++){\n        const button = document.createElement(\"button\");\n        button.setAttribute(\"name\", 'btn'+ currentClientId);\n        if (ch % ctx.destination.maxChannelCount==i){\n          button.style.background='green';\n        } else {\n          button.style.background='white';\n        }\n        button.innerText = i+1;\n        button.onclick = changeChan;\n        btn_chan.appendChild(button);\n      }\n      ch++;\n      ch = ch % ctx.destination.maxChannelCount;\n      const streamVisualizer = new MyWebAudio(source, analyser, canvas);\n      streamVisualizer.start();\n\n      // 4SPAT :\n      // spatDiv_client = document.createElement('div');\n      // spatDiv_client.setAttribute(\"id\", 'spatDiv'+ currentClientId);\n      // spatDiv_client.classList.add('spatDiv_client');\n      // spatDiv_client.addEventListener(\"mousedown\", mousedown);\n      // spatDiv.appendChild(spatDiv_client);\n    };\n    let button = document.createElement(\"button\");\n    button.setAttribute(\"name\", 'btn_id'+ currentClientId);\n    button.innerText = \"ID\";\n    button.onclick = clientResearch;\n    divS.appendChild(button);\n    if ((currentSel!=0)&&(currentSel!=1)) divS.style.display = 'none';\n\n    divS = document.createElement(\"div\");\n    divS.setAttribute(\"name\", 'divS2');\n    divS.classList.add(\"divS\");\n    clientdiv.appendChild(divS);\n    let videoMaster = document.getElementById(\"adminVideos\");\n    videoMaster = videoMaster.getElementsByTagName(\"video\")[0];\n    if (videoMaster != undefined){\n      videoMaster.setAttribute(\"name\", 'video' + currentClientId);\n      videoMaster.style.display = \"inline\";\n      divS.appendChild(videoMaster);\n      const btn_videos = document.createElement(\"div\");\n      divS.appendChild(btn_videos);\n      for (let i=0;i<NVideo;i++){\n        const button = document.createElement(\"button\");\n        button.setAttribute(\"name\", 'btn'+ currentClientId);\n        button.innerText = i+1;\n        button.onclick = changeVid;\n        btn_videos.appendChild(button);\n      }\n      const button = document.createElement(\"button\");\n      button.setAttribute(\"name\", 'btn'+ currentClientId);\n      button.innerText = \"R\";\n      button.onclick = randVid;\n      btn_videos.appendChild(button);\n    }\n    button = document.createElement(\"button\");\n    button.setAttribute(\"name\", 'btn_id'+ currentClientId);\n    button.innerText = \"ID\";\n    button.onclick = clientResearch;\n    divS.appendChild(button);\n    if ((currentSel!=0)&&(currentSel!=20)&&(currentSel!=21)) divS.style.display = 'none';\n\n    divS = document.createElement(\"div\");\n    divS.setAttribute(\"name\", 'divS3');\n    divS.classList.add(\"divS\");\n    clientdiv.appendChild(divS);\n    let audioCrac= document.createElement(\"audio\");\n    audioCrac.setAttribute(\"name\", 'audioCrac' + currentClientId);\n    audioCrac.controls = true;\n    audioCrac.loop = true;\n    audioCrac.autoplay = false;\n    audioCrac.muted = false;\n    audioCrac.src = './audios/audio1.wav';\n    audioCrac.controlsList=\"nodownload noplaybackrate\";\n    divS.appendChild(audioCrac);\n\n    let audioCrac2= document.createElement(\"audio\");\n    audioCrac2.setAttribute(\"name\", 'audioCrac2' + currentClientId);\n    audioCrac2.controls = true;\n    audioCrac2.loop = true;\n    audioCrac2.autoplay = false;\n    audioCrac2.muted = false;\n    audioCrac2.src = './audios/audio2.wav';\n    audioCrac2.controlsList=\"nodownload noplaybackrate\";\n    divS.appendChild(audioCrac2);\n\n    button = document.createElement(\"button\");\n    button.setAttribute(\"name\", 'btn_id'+ currentClientId);\n    button.innerText = \"ID\";\n    button.onclick = clientResearch;\n    divS.appendChild(button);\n    if ((currentSel!=0)&&(currentSel!=3)) divS.style.display = 'none';\n    \n    divS = document.createElement(\"div\");\n    divS.setAttribute(\"name\", 'divTech');\n    divS.classList.add(\"divS\");\n    clientdiv.appendChild(divS);\n    \n    button = document.createElement(\"button\");\n    button.setAttribute(\"name\", 'btn_id'+ currentClientId);\n    button.innerText = \"ID\";\n    button.onclick = clientResearch;\n    divS.appendChild(button);\n    \n    const divStats = document.createElement(\"div\");\n    divStats.setAttribute(\"name\", 'divStats'+ currentClientId);\n    divS.appendChild(divStats);\n\n    button = document.createElement(\"button\");\n    button.setAttribute(\"name\", 'btn'+ currentClientId);\n    button.innerText = \"STOP\";\n    button.onclick = stop;\n    button.style.background = \"red\";\n    divS.appendChild(button);\n\n    if ((currentSel!=0)&&(currentSel!=4)) divS.style.display = 'none';\n  };\n}\n\nfunction receiveChannelCallback(event) {\n  console.log('Receive Channel Callback');\n  receiveChannel = event.channel;\n  receiveChannel.onmessage = onReceiveChannelMessageCallback;\n  receiveChannel.onopen = onReceiveChannelStateChange;\n  receiveChannel.onclose = onReceiveChannelStateChange;\n}\n\nfunction onReceiveChannelMessageCallback(event) {\n  console.log('Received Message : ' + event.data);\n  data = JSON.parse(event.data)\n  let client = clientS.find(c=>c.clientId == data.clientId);\n  client.div.style.background = \"red\";\n  setTimeout(()=>{client.div.style.background = \"white\";}, 1000);\n  if (data.mess){\n    switch (data.mess){\n      case 'NoMic':\n        let div = Array.from(client.div.children).find(c=>c.getAttribute('name')=='divS1');\n        removeAllChildNodes(div);\n        const nomic = document.createTextNode(\"No MIC\");\n        div.appendChild(nomic);\n      break;\n      default:\n        console.log('No mess');\n    }\n  }\n}\n\nfunction onReceiveChannelStateChange() {\n  const readyState = receiveChannel.readyState;\n  console.log(`Receive channel state is: ${readyState}`);\n}\n\nfunction sendData(event) {\n  let data = {};\n  switch (event.srcElement.id){\n    case \"btn_reload\":\n      data = {\"scene\": 0};\n      currentSceneNb = 1;\n      for (const child of scenes.children) {\n        child.style.border = 'none';\n      }\n      break;\n    case \"btn_lauch\":\n\n      const scene = scenes_array.find(c=>c.style.background == 'orange');\n      if (scene){\n        for (const child of scenes.children) {\n          child.style.border = 'none';\n        }\n        switch (scene.getAttribute('id')){\n          case \"btn_scene1\":\n            currentSceneNb = 1;\n            data = {\"scene\": currentSceneNb};\n            scene.style.border = 'solid';\n            scene.style.borderColor = 'red';\n            break;\n          case \"btn_scene20\":\n            currentSceneNb = 20;\n            data = {\"scene\": currentSceneNb};\n            scene.style.border = 'solid';\n            scene.style.borderColor = 'red';\n            break;\n          case \"btn_scene21\":\n            currentSceneNb = 21;\n            data = {\"scene\": currentSceneNb};\n            scene.style.border = 'solid';\n            scene.style.borderColor = 'red';\n            // change2Vid();\n            break;\n          case \"btn_scene21_random\":\n            currentSceneNb = 5;\n            data = {\"scene\": currentSceneNb};\n            scene.style.border = 'solid';\n            scene.style.borderColor = 'red';\n            // change2Vid();\n            break;\n          case \"btn_scene3\":\n            // data = {\"scene\": 6};\n            currentSceneNb = 3;\n            data = {\"scene\": currentSceneNb};\n            scene.style.border = 'solid';\n            scene.style.borderColor = 'red';\n            change2Crac();\n            break;\n          case \"btn_scene6\":\n            data = {\"scene\": 6};\n            currentSceneNb = 6;\n            data = {\"scene\": currentSceneNb};\n            scene.style.border = 'solid';\n            scene.style.borderColor = 'red';\n            break;\n          case \"btn_sceneTHEEND\":\n            data = {\"scene\": 7};\n            currentSceneNb = 7;\n            data = {\"scene\": currentSceneNb};\n            scene.style.border = 'solid';\n            scene.style.borderColor = 'red';\n            break;\n          default:\n            alert('Sélectionne une scène ! (1)');\n            break;\n        }\n      } else {\n        alert('Sélectionne une scène ! (2)');\n      }\n\n    break;\n    \n    default:\n      console.log(\"Error : no scene found !\")\n  }\n  \n  for (let i = 0; i < clientS.length; i++){\n    if (clientS[i].rtcDataSendChannel.readyState === 'open') {\n      clientS[i].rtcDataSendChannel.send(JSON.stringify(data));\n    }\n  }\n  console.log('Sent Data: ' + data.scene);\n}\n\nfunction onSendChannelStateChange() {\n  const readyState = sendChannel.readyState;\n  console.log('Send channel state is: ' + readyState);\n  if (readyState == 'open'){\n    sendChannel.send(JSON.stringify({\"scene\":  currentSceneNb}));\n    if (currentSceneNb == 3) change2Crac();\n  }\n}\n\nfunction onSendChannelMessageCallback(event) {\n  console.log('Message sent');\n}\n\nfunction change2Crac(){\n  // let audioCrac2 = document.getElementsByName('audioCrac2' + clientS[0].clientId)[0];\n  // let audioSource2 = ctx.createMediaElementSource(audioCrac2);\n  clientS.forEach((client)=>{\n    try {\n      if (client.rtcPeerConnection.connectionState !== \"closed\"){\n        let audioCrac = document.getElementsByName('audioCrac' + client.clientId)[0];\n        let audioSource = ctx.createMediaElementSource(audioCrac);\n        audioSource.connect(client.audioCrac_myPeer);\n        let audioCrac2 = document.getElementsByName('audioCrac2' + client.clientId)[0];\n        let audioSource2 = ctx.createMediaElementSource(audioCrac2);\n        audioSource2.connect(client.audioCrac_myPeer);\n        audioCrac2.playbackRate = Math.random() + 1;\n        audioCrac2.play();\n        let audioSender = client.rtcPeerConnection.getSenders().find((s) => s.track.kind === \"audio\");\n        audioSender.replaceTrack(client.audioCrac_myPeer.stream.getTracks()[0]);\n        let videoSender = client.rtcPeerConnection.getSenders().find((s) => s.track.kind === \"video\");\n        client.rtcPeerConnection.removeTrack(videoSender);\n      }\n    } catch(err){\n      console.log(err);\n    }\n  });\n}\n\nfunction randVid(event){\n  const clientId = event.target.name.substring(3);\n  const scene = scenes_array.find(c=>c.style.background == 'orange');\n  if (scene){\n    switch (scene.getAttribute('id')){\n      case \"btn_scene20\":\n        break;\n      case \"btn_scene21\":\n        data = {\"scene\": 21, \"video\": event.target.innerText};\n        const client = clientS.find(c=>c.clientId == clientId);\n        if (client.rtcDataSendChannel.readyState === 'open') {\n          client.rtcDataSendChannel.send(JSON.stringify(data));\n        }\n    }\n  }\n}\n\nfunction changeVid(event){\n  for (const child of event.target.parentElement.children) {\n    child.style.background = 'white';\n  }\n  event.target.style.background = 'green';\n  const clientId = event.target.name.substring(3);\n  const scene = scenes_array.find(c=>c.style.background == 'orange');\n  if (scene){\n    switch (scene.getAttribute('id')){\n      case \"btn_scene20\":\n        let videoelement = document.getElementsByName('video' + clientId)[0];\n        videoelement.src = './videosNEW/video'+event.target.innerText+'.mp4';\n        videoelement.type=\"video/mp4\";\n        videoelement.play()\n        .then(() => {\n          let adminStream = videoelement.captureStream();\n          let client = clientS.find(t=>t.clientId==clientId);\n          const [videoTrack] = adminStream.getVideoTracks();\n          let videoSender = client.rtcPeerConnection.getSenders().find((s) => s.track.kind === videoTrack.kind);\n          videoSender.replaceTrack(videoTrack);\n          const [audioTrack] = adminStream.getAudioTracks();\n          let audioSender = client.rtcPeerConnection.getSenders().find((s) => s.track.kind === audioTrack.kind);\n          audioSender.replaceTrack(audioTrack);\n          });\n        break;\n      case \"btn_scene21\":\n        const data = {\"scene\": 21, \"video\": event.target.innerText};\n        console.log(data);\n        const client = clientS.find(c=>c.clientId == clientId);\n        if (client.rtcDataSendChannel.readyState === 'open') {\n          client.rtcDataSendChannel.send(JSON.stringify(data));\n        }\n    }\n  }\n}\n\nfunction changeScene(event){\n  if (event.target.style.background == 'orange'){\n    event.target.style.background = 'yellow';\n    document.getElementsByName('divS1').forEach(d=>d.style.display='flex');\n    document.getElementsByName('divS2').forEach(d=>d.style.display='flex');\n    document.getElementsByName('divS3').forEach(d=>d.style.display='flex');\n    document.getElementsByName('divTech').forEach(d=>d.style.display='flex');\n    currentSel = 0;\n    } else {\n    for (const child of scenes.children) {\n      child.style.background = 'yellow';\n    }\n    event.target.style.background = 'orange';\n    console.log(event.target.getAttribute('id'));\n    switch (event.target.getAttribute('id')){\n      case \"btn_scene1\":\n        document.getElementsByName('divS1').forEach(d=>d.style.display='flex');\n        document.getElementsByName('divS2').forEach(d=>d.style.display='none');\n        document.getElementsByName('divS3').forEach(d=>d.style.display='none');\n        document.getElementsByName('divTech').forEach(d=>d.style.display='none');\n        currentSel = 1;\n        break;\n      case \"btn_scene20\":\n        document.getElementsByName('divS1').forEach(d=>d.style.display='none');\n        document.getElementsByName('divS2').forEach(d=>d.style.display='flex');\n        document.getElementsByName('divS3').forEach(d=>d.style.display='none');\n        document.getElementsByName('divTech').forEach(d=>d.style.display='none');\n        currentSel = 20;\n        break;\n      case \"btn_scene21\":\n        document.getElementsByName('divS1').forEach(d=>d.style.display='none');\n        document.getElementsByName('divS2').forEach(d=>d.style.display='flex');\n        document.getElementsByName('divS3').forEach(d=>d.style.display='none');\n        document.getElementsByName('divTech').forEach(d=>d.style.display='none');\n        currentSel = 21;\n        break;\n      case \"btn_scene3\":\n        document.getElementsByName('divS1').forEach(d=>d.style.display='none');\n        document.getElementsByName('divS2').forEach(d=>d.style.display='none');\n        document.getElementsByName('divS3').forEach(d=>d.style.display='flex');\n        document.getElementsByName('divTech').forEach(d=>d.style.display='none');\n        currentSel = 3;\n        break;\n      case \"btn_scene6\":\n        document.getElementsByName('divS1').forEach(d=>d.style.display='flex');\n        document.getElementsByName('divS2').forEach(d=>d.style.display='none');\n        document.getElementsByName('divS3').forEach(d=>d.style.display='none');\n        document.getElementsByName('divTech').forEach(d=>d.style.display='none');\n        currentSel = 1;\n        break;\n      case \"btn_sceneTHEEND\":\n        document.getElementsByName('divS1').forEach(d=>d.style.display='flex');\n        document.getElementsByName('divS2').forEach(d=>d.style.display='none');\n        document.getElementsByName('divS3').forEach(d=>d.style.display='none');\n        document.getElementsByName('divTech').forEach(d=>d.style.display='none');\n        currentSel = 1;\n        break;\n      case \"btn_tech\":\n        document.getElementsByName('divS1').forEach(d=>d.style.display='none');\n        document.getElementsByName('divS2').forEach(d=>d.style.display='none');\n        document.getElementsByName('divS3').forEach(d=>d.style.display='none');\n        document.getElementsByName('divTech').forEach(d=>d.style.display='flex');\n        currentSel = 4;\n        break;\n    }\n  }\n}\n\nfunction changeChan(event){\n  const clientId = event.target.name.substring(3);\n  let client = clientS.find(t=>t.clientId==clientId);\n  client.analyser.disconnect(0);\n  client.analyser.connect(merger, 0, parseInt(event.target.innerText)-1);\n  // for (let i = 0; i<client.spatGains.length; i++){ \n  //   if (i == parseInt(event.target.innerText)-1){\n  //     client.spatGains[i].gain.exponentialRampToValueAtTime(1.0, ctx.currentTime + 2);\n  //   } else {\n  //     client.spatGains[i].gain.exponentialRampToValueAtTime(0.01, ctx.currentTime + 2);\n  //   }\n  // }\n  for (const child of event.target.parentElement.children) {\n    child.style.background = \"white\";\n  }\n  event.target.style.background = \"green\";\n}\n\nfunction changeGain(event){\n  const clientId = event.target.name.substring(5);\n  let client = clientS.find(t=>t.clientId==clientId);\n  client.gainNode.gain.value = event.target.value;\n}\n\nfunction changeCutFreq(event){\n  const clientId = event.target.name.substring(5);\n  let client = clientS.find(t=>t.clientId==clientId);\n  client.cutFreq.frequency.value = event.target.value;\n}\n\nfunction stop(event){\n  const clientId = event.target.name.substring(3);\n  removeClient(clientId);\n}\n\nfunction clientResearch(event){\n  const clientId = event.target.name.substring(6);\n  const client = clientS.find(c=>c.clientId == clientId);\n  if (client.rtcDataSendChannel.readyState === 'open') {\n    const data = {\"id\": clientId};\n    client.rtcDataSendChannel.send(JSON.stringify(data));\n  }\n}\n\nfunction removeClient(clientId){\n  let client = clientS.find(t=>t.clientId==clientId);\n  let ind = clientS.findIndex(t=>t.clientId==clientId);\n  try{\n    client.rtcDataSendChannel.close();\n    client.rtcPeerConnection.close();\n    client.rtcPeerConnection = null;\n  } catch (error) {\n    console.error(error);\n  }\n  let videoelement = document.getElementsByName('video' + clientId)[0];\n  videoelement.pause();\n  adminVideos.appendChild(videoelement);\n  removeAllChildNodes(client.div);\n  client.div.remove();\n  clientS.splice(ind, 1);\n}\n\nfunction removeAllChildNodes(parent) {\n  while (parent.firstChild) {\n      parent.removeChild(parent.firstChild);\n  }\n}\n\nfunction removeAllStoped() {\n  clientS.filter(c=>c.rtcPeerConnection.connectionState!=='connected').forEach(c=>removeClient(c.clientId));\n  console.log(clientS);\n}\n\nfunction changeBackgroundColor(event){\n  if  (event.code == \"Space\"){\n    let randNumber = Math.max(Math.round(Math.random()*clientS.length), 1);\n    try {\n      const data = {\"scene\": 4};\n      for (let i = 0; i < randNumber; i++){\n        let datachan = clientS[(iterKey+i) % clientS.length].rtcDataSendChannel;\n        let audioCrac = document.getElementsByName('audioCrac'+clientS[(iterKey+i) % clientS.length].clientId)[0];\n        if (datachan.readyState === 'open') {\n          datachan.send(JSON.stringify(data));\n          audioCrac.playbackRate = Math.random()+0.1;\n          audioCrac.play();\n          setTimeout(()=>{audioCrac.pause()}, 2000);\n        } else {\n          audioCrac.pause();\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    iterKey+=randNumber;\n  }\n}\n\n\n/// MIDI SETTINGS :\nvar log = console.log.bind(console), keyData = document.getElementById('key_data'), \n\t\t\t\tdeviceInfoInputs = document.getElementById('inputs'), deviceInfoOutputs = document.getElementById('outputs'), midi;\n\nif(navigator.requestMIDIAccess){\n  navigator.requestMIDIAccess({sysex: false}).then(onMIDISuccess, onMIDIFailure);\n}\nelse {\n  alert(\"No MIDI support in your browser.\");\n}\n\n// midi functions\nfunction onMIDISuccess(midiAccess){\n\tmidi = midiAccess;\n\tvar inputs = midi.inputs.values();\n\t// loop through all inputs\n\tfor(var input = inputs.next(); input && !input.done; input = inputs.next()){\n\t\t// listen for midi messages\n\t\tinput.value.onmidimessage = onMIDIMessage;\n\n\t\tlistInputs(input);\n\t}\n\t// listen for connect/disconnect message\n\tmidi.onstatechange = onStateChange;\n\n\tshowMIDIPorts(midi);\n}\n\nfunction onMIDIMessage(event){\n\tdata = event.data,\n\tcmd = data[0] >> 4,\n\tchannel = data[0] & 0xf,\n\ttype = data[0] & 0xf0, // channel agnostic message type. Thanks, Phil Burk.\n\tnote = data[1],\n\tvelocity = data[2];\n\t// with pressure and tilt off\n\t// note off: 128, cmd: 8 \n\t// note on: 144, cmd: 9\n\t// pressure / tilt on\n\t// pressure: 176, cmd 11: \n\t// bend: 224, cmd: 14\n\t// log('MIDI data', data);\n\t/*switch(type){\n\t\tcase 144: // noteOn message \n\t\t\tnoteOn(note, velocity);\n\t\t\tbreak;\n\t\tcase 128: // noteOff message \n\t\t\tnoteOff(note, velocity);\n\t\t\tbreak;\n\t}*/\n\t\n\t//log('data', data, 'cmd', cmd, 'channel', channel);\n\t// logger(keyData, 'key data', data);\n\n  if ((note == 46)&&(velocity==127)) {\n    let randNumber = Math.max(Math.round(Math.random()*clientS.length), 1);\n    try {\n      data = {\"scene\": 4};\n      for (let i = 0; i < randNumber; i++){\n        clientS[(iterKey+i) % clientS.length].rtcDataSendChannel.send(JSON.stringify(data));\n        let audioCrac = document.getElementsByName('audioCrac'+clientS[(iterKey+i) % clientS.length].clientId)[0];\n        audioCrac.playbackRate = Math.random()+0.1;\n        audioCrac.play();\n        setTimeout(()=>{audioCrac.pause()}, 1500);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    iterKey+=randNumber;\n  } else if (note == 60){\n      if (velocity==80){\n        const scene = scenes_array.find(c=>c.style.background == 'orange');\n        if ((scene==undefined)||(scene.getAttribute(\"id\")!==\"btn_scene6\")){\n          document.getElementById(\"btn_scene6\").click();\n        }\n        document.getElementById(\"btn_lauch\").click();\n    } else {\n      document.getElementById(\"btn_scene1\").click();\n      document.getElementById(\"btn_lauch\").click();\n    }\n  }\n  /*try {\n    data = {\"scene\": 4};\n    switch (note){\n      case 60 :\n        clientS[0].rtcDataSendChannel.send(JSON.stringify(data));\n        break;\n      case 61 :\n        clientS[1].rtcDataSendChannel.send(JSON.stringify(data));\n        break;\n      case 30 :\n        clientS[0].gainNode.gain.value = velocity;\n        break\n    }\n  } catch (error) {\n    console.error(error);\n  }*/\n}\n\nfunction logger(container, label, data){\n\tmessages = label + \" [channel: \" + (data[0] & 0xf) + \", cmd: \" + (data[0] >> 4) + \", type: \" + (data[0] & 0xf0) + \" , note: \" + data[1] + \" , velocity: \" + data[2] + \"]\";\n\tcontainer.textContent = messages;\n}\n\nfunction onMIDIFailure(e){\n\tlog(\"No access to MIDI devices or your browser doesn't support WebMIDI API. Please use WebMIDIAPIShim \" + e);\n}\n\n// MIDI utility functions\nfunction showMIDIPorts(midiAccess){\n\tvar inputs = midiAccess.inputs,\n\t\t\toutputs = midiAccess.outputs, \n\t\t\thtml;\n\thtml = '<h4>MIDI Inputs:</h4><div class=\"info\">';\n\tinputs.forEach(function(port){\n\t\thtml += '<p>' + port.name + '<p>';\n\t\thtml += '<p class=\"small\">connection: ' + port.connection + '</p>';\n\t\thtml += '<p class=\"small\">state: ' + port.state + '</p>';\n\t\thtml += '<p class=\"small\">manufacturer: ' + port.manufacturer + '</p>';\n\t\tif(port.version){\n\t\t\thtml += '<p class=\"small\">version: ' + port.version + '</p>';\n\t\t}\n\t});\n\tdeviceInfoInputs.innerHTML = html + '</div>';\n\n\thtml = '<h4>MIDI Outputs:</h4><div class=\"info\">';\n\toutputs.forEach(function(port){\n\t\thtml += '<p>' + port.name + '<br>';\n\t\thtml += '<p class=\"small\">manufacturer: ' + port.manufacturer + '</p>';\n\t\tif(port.version){\n\t\t\thtml += '<p class=\"small\">version: ' + port.version + '</p>';\n\t\t}\n\t});\n\tdeviceInfoOutputs.innerHTML = html + '</div>';\n}\n\nfunction onStateChange(event){\n\tshowMIDIPorts(midi);\n\tvar port = event.port, state = port.state, name = port.name, type = port.type;\n\tif(type == \"input\")\n\t\tlog(\"name\", name, \"port\", port, \"state\", state);\n}\n\nfunction listInputs(inputs){\n\tvar input = inputs.value;\n\t\tlog(\"Input port : [ type:'\" + input.type + \"' id: '\" + input.id + \n\t\t\t\t\"' manufacturer: '\" + input.manufacturer + \"' name: '\" + input.name + \n\t\t\t\t\"' version: '\" + input.version + \"']\");\n}"],"names":["PACKET_TYPES","PACKET_TYPES_REVERSE","key","ERROR_PACKET","withNativeBlob","withNativeArrayBuffer","isView","obj","encodePacket","type","data","supportsBinary","callback","encodeBlobAsBase64","fileReader","content","toArray","TEXT_ENCODER","encodePacketToBinary","packet","encoded","chars","lookup","i","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","decodeBase64Packet","decoded","SEPARATOR","encodePayload","packets","length","encodedPackets","count","decodePayload","encodedPayload","decodedPacket","createPacketEncoderStream","controller","payloadLength","header","view","TEXT_DECODER","totalLength","chunks","acc","chunk","concatChunks","size","buffer","j","createPacketDecoderStream","maxPayload","state","expectedLength","isBinary","headerArray","n","protocol","Emitter","mixin","event","fn","on","callbacks","cb","args","globalThisShim","pick","attr","k","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","BASE64_OVERHEAD","byteLength","utf8Length","str","c","l","encode","qs","qry","pairs","pair","TransportError","reason","description","context","Transport","details","onPause","schema","query","hostname","encodedQuery","alphabet","map","seed","prev","num","yeast","now","value","hasCORS","XHR","xdomain","empty","hasXHR2","XMLHttpRequest","Polling","isSSL","port","forceBase64","pause","total","close","Request","req","xhrStatus","uri","_a","xhr","e","err","fromError","unloadHandler","terminationEvent","nextTick","setTimeoutFn","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","WS","protocols","closeEvent","ev","lastPacket","WT","stream","decoderStream","reader","encoderStream","read","done","transports","re","parts","parse","src","b","m","pathNames","queryKey","path","regx","names","$0","$1","$2","Socket","name","transport","failed","onTransportOpen","msg","cleanup","freezeTransport","onerror","error","onTransportClose","onclose","onupgrade","to","payloadSize","options","cleanupAndClose","waitForUpgrade","upgrades","filteredUpgrades","url","loc","host","toString","withNativeFile","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","deconstruction","isObject","Decoder","reviver","isBinaryEvent","BinaryReconstructor","start","buf","next","payload","binData","io","nsp","id","ack","isTransportWritable","timeout","timer","resolve","reject","arg1","arg2","responseArgs","force","listeners","listener","self","sent","pid","subDestroy","compress","Backoff","ms","rand","deviation","min","max","jitter","Manager","_parser","parser","v","Engine","socket","openSubDestroy","onError","errorSub","nsps","delay","attempt","cache","parsed","source","sameNamespace","newConnection","SMOOTHING","FFT_SIZE","MyWebAudio","analyser","canvas","barWidth","offset","height","percent","hue","freq","nyquist","index","adminVideos","videoelement","startContext","sendData","removeAllStoped","changeScene","g","scenes","scenes_array","resizeTel","t","divGStats","clientS","sendChannel","receiveChannel","currentSceneNb","currentSel","iterKey","changeBackgroundColor","NVideo","roomName","currentClientId","stopco","stopco2","iceServers","ctx","merger","ch","gainNode","cutFreq","rbitrate","sbitrate","clientId","divStats","statsPrev","results","stats","dumpStats","res","offer","removeClient","adminStream","audioTracks","videoTracks","track","rtcPeerConnection","OnIceCandidateFunction","receiveChannelCallback","OnTrackFunction","answer","onSendChannelStateChange","onSendChannelMessageCallback","myPeer","client","medias","clientdiv","divS","audio","gain","changeGain","cutFreq_f","changeCutFreq","splitter","btn_chan","button","changeChan","clientResearch","videoMaster","btn_videos","changeVid","randVid","audioCrac","audioCrac2","stop","onReceiveChannelMessageCallback","onReceiveChannelStateChange","div","removeAllChildNodes","nomic","readyState","child","scene","change2Crac","s","videoSender","videoTrack","audioTrack","d","ind","parent","randNumber","datachan","log","deviceInfoInputs","deviceInfoOutputs","midi","onMIDISuccess","onMIDIFailure","midiAccess","inputs","input","onMIDIMessage","listInputs","onStateChange","showMIDIPorts","outputs","html"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]}